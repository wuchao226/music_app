apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.mob.sdk'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion this.rootProject.android.compileSdkVersion
    defaultConfig {
        minSdkVersion this.rootProject.android.minSdkVersion
        targetSdkVersion this.rootProject.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        //ARouter配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def depsLibs = this.rootProject.depsLibs
    //compile only和provided效果是一样的，只在编译的时候有效， 不参与打包
    //implementation依赖的库只能自己库本身访问
    //api和compile是一样的效果
    //占位主工程android原生库
    implementation depsLibs.appcompat
    implementation depsLibs.constraintlayout
    compileOnly depsLibs.appcompat
    compileOnly depsLibs.material
    compileOnly depsLibs.recyclerview

    //占位主工程的greenDao类库
    compileOnly depsLibs.greendao
    //占位主工程的eventbus库
    compileOnly depsLibs.eventbus
    //占位主工程的rxjava库
    compileOnly depsLibs.rxjava

    //占位主工程arouter库
    compileOnly depsLibs.arouterapi
    annotationProcessor depsLibs.aroutercompiler

    //占位主工程自己源码库
    //图片加载库
    compileOnly project(':lib_image_loader')
    //基础UI库
    compileOnly project(':lib_common_ui')
    //分享库
    compileOnly project(':lib_share')
    //业务基础库
    compileOnly project(':lib_base')
}
